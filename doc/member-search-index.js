memberSearchIndex = [{"p":"com.logic.exps.asts.binary","c":"AASTBinaryExp","l":"AASTBinaryExp(IASTExp, IASTExp)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.binary","c":"AASTBinaryND","l":"AASTBinaryND(IASTND, IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts","c":"AASTExp","l":"AASTExp()","u":"%3Cinit%3E()"},{"p":"com.logic.nd.asts","c":"AASTND","l":"AASTND()","u":"%3Cinit%3E()"},{"p":"com.logic.exps.asts.others","c":"AASTTerm","l":"AASTTerm(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.logic.exps.asts.unary","c":"AASTUnaryExp","l":"AASTUnaryExp(IASTExp)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"AASTUnaryND","l":"AASTUnaryND(IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd","c":"ERule","l":"ABSURDITY"},{"p":"com.logic.exps.asts.binary","c":"ASTAnd","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.binary","c":"ASTBiconditional","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.binary","c":"ASTConditional","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.binary","c":"ASTExistential","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.binary","c":"ASTOr","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.binary","c":"ASTUniversal","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts","c":"IASTExp","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.others","c":"ASTArbitrary","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.others","c":"ASTBottom","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.others","c":"ASTConstant","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.others","c":"ASTFun","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.others","c":"ASTLiteral","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.others","c":"ASTPred","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.others","c":"ASTTop","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.others","c":"ASTVariable","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.unary","c":"ASTNot","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.exps.asts.unary","c":"ASTParenthesis","l":"accept(IExpsVisitor<T, E>, E)","u":"accept(com.logic.exps.asts.IExpsVisitor,E)"},{"p":"com.logic.nd.asts.binary","c":"ASTEExist","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.binary","c":"ASTEImp","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.binary","c":"ASTENeg","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.binary","c":"ASTIConj","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts","c":"IASTND","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.others","c":"ASTHypothesis","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.unary","c":"ASTAbsurdity","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.unary","c":"ASTELConj","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.unary","c":"ASTERConj","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.unary","c":"ASTEUni","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.unary","c":"ASTIExist","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.unary","c":"ASTIImp","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.unary","c":"ASTILDis","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.unary","c":"ASTINeg","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.unary","c":"ASTIRDis","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.nd.asts.unary","c":"ASTIUni","l":"accept(INDVisitor<T, E>, E)","u":"accept(com.logic.nd.asts.INDVisitor,E)"},{"p":"com.logic.parser","c":"ParseException","l":"add_escapes(String)","u":"add_escapes(java.lang.String)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"addEdge(IASTExp, TransitionEdge, boolean)","u":"addEdge(com.logic.exps.asts.IASTExp,com.logic.nd.algorithm.transition.TransitionEdge,boolean)"},{"p":"com.logic.parser","c":"TokenMgrError","l":"addEscapes(String)","u":"addEscapes(java.lang.String)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofFOLBuilder","l":"addForbiddenRule(ERule)","u":"addForbiddenRule(com.logic.nd.ERule)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofPLBuilder","l":"addForbiddenRule(ERule)","u":"addForbiddenRule(com.logic.nd.ERule)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofFOLBuilder","l":"addForbiddenRules(Set<ERule>)","u":"addForbiddenRules(java.util.Set)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofPLBuilder","l":"addForbiddenRules(Set<ERule>)","u":"addForbiddenRules(java.util.Set)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofStateBuilder","l":"addHypotheses(Set<IFormula>)","u":"addHypotheses(java.util.Set)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofStateBuilder","l":"addHypothesis(IFormula)","u":"addHypothesis(com.logic.api.IFormula)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphFOL","l":"addNode(IASTExp, boolean)","u":"addNode(com.logic.exps.asts.IASTExp,boolean)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"addNode(IASTExp, boolean)","u":"addNode(com.logic.exps.asts.IASTExp,boolean)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofStateBuilder","l":"addNoFreeVariable(ASTVariable)","u":"addNoFreeVariable(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofFOLBuilder","l":"addPremise(IFOLFormula)","u":"addPremise(com.logic.api.IFOLFormula)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofPLBuilder","l":"addPremise(IPLFormula)","u":"addPremise(com.logic.api.IPLFormula)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofFOLBuilder","l":"addPremises(Set<IFOLFormula>)","u":"addPremises(java.util.Set)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofPLBuilder","l":"addPremises(Set<IPLFormula>)","u":"addPremises(java.util.Set)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofFOLBuilder","l":"addTerm(AASTTerm)","u":"addTerm(com.logic.exps.asts.others.AASTTerm)"},{"p":"com.logic.exps.asts.others","c":"ASTFun","l":"addTerm(IASTExp)","u":"addTerm(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.others","c":"ASTPred","l":"addTerm(IASTExp)","u":"addTerm(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofFOLBuilder","l":"addTerms(Set<AASTTerm>)","u":"addTerms(java.util.Set)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionEdge","l":"addTransition(IFormula)","u":"addTransition(com.logic.api.IFormula)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionEdge","l":"addTransition(IFormula, IFormula)","u":"addTransition(com.logic.api.IFormula,com.logic.api.IFormula)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionEdge","l":"addTransition(IFormula, IFormula, ASTVariable)","u":"addTransition(com.logic.api.IFormula,com.logic.api.IFormula,com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.nd.algorithm.state","c":"StateEdge","l":"addTransition(StateNode, IFormula)","u":"addTransition(com.logic.nd.algorithm.state.StateNode,com.logic.api.IFormula)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"adjustBeginLineColumn(int, int)","u":"adjustBeginLineColumn(int,int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"AdjustBuffSize()"},{"p":"com.logic.nd.algorithm","c":"AlgoProofFOLBuilder","l":"AlgoProofFOLBuilder(IFOLFormula)","u":"%3Cinit%3E(com.logic.api.IFOLFormula)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofPLBuilder","l":"AlgoProofPLBuilder(IPLFormula)","u":"%3Cinit%3E(com.logic.api.IPLFormula)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofStateBuilder","l":"AlgoProofStateBuilder(IFormula)","u":"%3Cinit%3E(com.logic.api.IFormula)"},{"p":"com.logic.nd.algorithm","c":"AlgoSettingsBuilder","l":"AlgoSettingsBuilder()","u":"%3Cinit%3E()"},{"p":"com.logic.parser","c":"ParserConstants","l":"AND"},{"p":"com.logic.nd.asts.unary","c":"ASTAbsurdity","l":"ASTAbsurdity(IASTND, IASTExp, int)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp,int)"},{"p":"com.logic.exps.asts.binary","c":"ASTAnd","l":"ASTAnd(IASTExp, IASTExp)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.others","c":"ASTArbitrary","l":"ASTArbitrary(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.logic.exps.asts.binary","c":"ASTBiconditional","l":"ASTBiconditional(IASTExp, IASTExp)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.others","c":"ASTBottom","l":"ASTBottom()","u":"%3Cinit%3E()"},{"p":"com.logic.exps.asts.binary","c":"ASTConditional","l":"ASTConditional(IASTExp, IASTExp)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.others","c":"ASTConstant","l":"ASTConstant(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"ASTEDisj(IASTND, IASTND, IASTND, IASTExp, int, int)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.nd.asts.IASTND,com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp,int,int)"},{"p":"com.logic.nd.asts.binary","c":"ASTEExist","l":"ASTEExist(IASTND, IASTND, IASTExp, int)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp,int)"},{"p":"com.logic.nd.asts.binary","c":"ASTEImp","l":"ASTEImp(IASTND, IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"ASTELConj","l":"ASTELConj(IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.binary","c":"ASTENeg","l":"ASTENeg(IASTND, IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"ASTERConj","l":"ASTERConj(IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"ASTEUni","l":"ASTEUni(IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.binary","c":"ASTExistential","l":"ASTExistential(IASTExp, IASTExp)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.others","c":"ASTFun","l":"ASTFun(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.logic.exps.asts.others","c":"ASTFun","l":"ASTFun(String, List<IASTExp>)","u":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"com.logic.nd.asts.others","c":"ASTHypothesis","l":"ASTHypothesis(IASTExp, int)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp,int)"},{"p":"com.logic.nd.asts.binary","c":"ASTIConj","l":"ASTIConj(IASTND, IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"ASTIExist","l":"ASTIExist(IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"ASTIImp","l":"ASTIImp(IASTND, IASTExp, int)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp,int)"},{"p":"com.logic.nd.asts.unary","c":"ASTILDis","l":"ASTILDis(IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"ASTINeg","l":"ASTINeg(IASTND, IASTExp, int)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp,int)"},{"p":"com.logic.nd.asts.unary","c":"ASTIRDis","l":"ASTIRDis(IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"ASTIUni","l":"ASTIUni(IASTND, IASTExp)","u":"%3Cinit%3E(com.logic.nd.asts.IASTND,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.others","c":"ASTLiteral","l":"ASTLiteral(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.logic.exps.asts.unary","c":"ASTNot","l":"ASTNot(IASTExp)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.binary","c":"ASTOr","l":"ASTOr(IASTExp, IASTExp)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.unary","c":"ASTParenthesis","l":"ASTParenthesis(IASTExp)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.others","c":"ASTPred","l":"ASTPred(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.logic.exps.asts.others","c":"ASTPred","l":"ASTPred(String, List<IASTExp>)","u":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"com.logic.exps.asts.others","c":"ASTTop","l":"ASTTop()","u":"%3Cinit%3E()"},{"p":"com.logic.exps.asts.binary","c":"ASTUniversal","l":"ASTUniversal(IASTExp, IASTExp)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.asts.others","c":"ASTVariable","l":"ASTVariable(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"backup(int)"},{"p":"com.logic.parser","c":"Token","l":"beginColumn"},{"p":"com.logic.parser","c":"Token","l":"beginLine"},{"p":"com.logic.others","c":"Env","l":"beginScope()"},{"p":"com.logic.parser","c":"JavaCharStream","l":"BeginToken()"},{"p":"com.logic.parser","c":"ParserConstants","l":"BICONDITIONAL"},{"p":"com.logic.others","c":"Env","l":"bind(K, T)","u":"bind(K,T)"},{"p":"com.logic.exps","c":"ExpUtils","l":"BOT"},{"p":"com.logic.exps","c":"ExpUtils","l":"BOTF"},{"p":"com.logic.parser","c":"ParserConstants","l":"BOTTOM"},{"p":"com.logic.parser","c":"JavaCharStream","l":"bufcolumn"},{"p":"com.logic.parser","c":"JavaCharStream","l":"buffer"},{"p":"com.logic.parser","c":"JavaCharStream","l":"bufline"},{"p":"com.logic.parser","c":"JavaCharStream","l":"bufpos"},{"p":"com.logic.nd.algorithm","c":"AlgoProofFOLBuilder","l":"build()"},{"p":"com.logic.nd.algorithm","c":"AlgoProofPLBuilder","l":"build()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraph","l":"build()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"IStateGraph","l":"build()"},{"p":"com.logic.nd.algorithm.transition","c":"ITransitionGraph","l":"build()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphFOL","l":"build()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"build()"},{"p":"com.logic.nd.algorithm","c":"AlgoSettingsBuilder","l":"build(IFormula, Set<IFormula>)","u":"build(com.logic.api.IFormula,java.util.Set)"},{"p":"com.logic.nd.algorithm.state.strategies","c":"IBuildStrategy","l":"build(ITransitionGraph, StateGraphSettings)","u":"build(com.logic.nd.algorithm.transition.ITransitionGraph,com.logic.nd.algorithm.state.StateGraphSettings)"},{"p":"com.logic.nd.algorithm.state.strategies","c":"LinearBuildStrategy","l":"build(ITransitionGraph, StateGraphSettings)","u":"build(com.logic.nd.algorithm.transition.ITransitionGraph,com.logic.nd.algorithm.state.StateGraphSettings)"},{"p":"com.logic.nd.algorithm.state.strategies","c":"ParallelBuildStrategy","l":"build(ITransitionGraph, StateGraphSettings)","u":"build(com.logic.nd.algorithm.transition.ITransitionGraph,com.logic.nd.algorithm.state.StateGraphSettings)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofStateBuilder","l":"build(Set<IFormula>)","u":"build(java.util.Set)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"check(IASTExp)","u":"check(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"check(IASTExp)","u":"check(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"check(IASTND, Map<IASTExp, IFormula>)","u":"check(com.logic.nd.asts.IASTND,java.util.Map)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"check(IASTND, Map<IASTExp, IFormula>)","u":"check(com.logic.nd.asts.IASTND,java.util.Map)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"check(IASTND, Map<IASTExp, IFormula>, Map<IASTExp, Integer>)","u":"check(com.logic.nd.asts.IASTND,java.util.Map,java.util.Map)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"checkFOL(IASTND)","u":"checkFOL(com.logic.nd.asts.IASTND)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"checkPL(IASTND)","u":"checkPL(com.logic.nd.asts.IASTND)"},{"p":"com.logic.nd.algorithm.state.strategies","c":"ParallelBuildStrategy","l":"closed"},{"p":"com.logic.parser","c":"ParserConstants","l":"COLON"},{"p":"com.logic.parser","c":"JavaCharStream","l":"column"},{"p":"com.logic.parser","c":"ParserConstants","l":"COMMA"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"conclusion"},{"p":"com.logic.nd.asts.binary","c":"AASTBinaryND","l":"conclusion"},{"p":"com.logic.nd.asts.unary","c":"AASTUnaryND","l":"conclusion"},{"p":"com.logic.parser","c":"ParserConstants","l":"CONDITIONAL"},{"p":"com.logic.parser","c":"ParserConstants","l":"CONSEQUENCE"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"curChar"},{"p":"com.logic.parser","c":"ParseException","l":"currentToken"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"debugStream"},{"p":"com.logic.parser","c":"ParserConstants","l":"DEFAULT"},{"p":"com.logic.parser","c":"Parser","l":"disable_tracing()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"disjunctions"},{"p":"com.logic.parser","c":"JavaCharStream","l":"Done()"},{"p":"com.logic.parser","c":"ParserConstants","l":"DOT"},{"p":"com.logic.parser","c":"ParserConstants","l":"ECOND"},{"p":"com.logic.parser","c":"ParserConstants","l":"EEXIST"},{"p":"com.logic.parser","c":"ParserConstants","l":"ELAND"},{"p":"com.logic.nd","c":"ERule","l":"ELIM_CONJUNCTION_LEFT"},{"p":"com.logic.nd","c":"ERule","l":"ELIM_CONJUNCTION_RIGHT"},{"p":"com.logic.nd","c":"ERule","l":"ELIM_DISJUNCTION"},{"p":"com.logic.nd","c":"ERule","l":"ELIM_EXISTENTIAL"},{"p":"com.logic.nd","c":"ERule","l":"ELIM_IMPLICATION"},{"p":"com.logic.nd","c":"ERule","l":"ELIM_NEGATION"},{"p":"com.logic.nd","c":"ERule","l":"ELIM_UNIVERSAL"},{"p":"com.logic.parser","c":"Parser","l":"enable_tracing()"},{"p":"com.logic.parser","c":"Token","l":"endColumn"},{"p":"com.logic.parser","c":"Token","l":"endLine"},{"p":"com.logic.others","c":"Env","l":"endScope()"},{"p":"com.logic.parser","c":"ParserConstants","l":"ENEG"},{"p":"com.logic.parser","c":"ParserConstants","l":"ENTER"},{"p":"com.logic.others","c":"Env","l":"Env()","u":"%3Cinit%3E()"},{"p":"com.logic.parser","c":"ParserConstants","l":"EOF"},{"p":"com.logic.parser","c":"ParseException","l":"eol"},{"p":"com.logic.parser","c":"ParserConstants","l":"EOR"},{"p":"com.logic.exps.asts","c":"AASTExp","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.logic.exps.asts","c":"PLExp","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.logic.nd.algorithm.state","c":"StateEdge","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionEdge","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.logic.nd.asts","c":"AASTND","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.logic.parser","c":"ParserConstants","l":"ERAND"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"ERROR_INTERPRETATION"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"ERROR_MESSAGE"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"ERROR_MESSAGE"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"ERROR_MESSAGE_ARBITRARY"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"ERROR_MESSAGE_FUNCTION"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"ERROR_MESSAGE_PREDICATE"},{"p":"com.logic.parser","c":"ParserConstants","l":"EUNI"},{"p":"com.logic.parser","c":"ParserConstants","l":"EXISTENTIAL"},{"p":"com.logic.exps.asts.unary","c":"AASTUnaryExp","l":"exp"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ExpandBuff(boolean)"},{"p":"com.logic.parser","c":"ParseException","l":"expectedTokenSequences"},{"p":"com.logic.nd.algorithm.state.strategies","c":"ParallelBuildStrategy","l":"explore"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"explored"},{"p":"com.logic.exps","c":"ExpUtils","l":"ExpUtils()","u":"%3Cinit%3E()"},{"p":"com.logic.parser","c":"JavaCharStream","l":"FillBuff()"},{"p":"com.logic.others","c":"Env","l":"find(K)"},{"p":"com.logic.nd.algorithm.state","c":"StateSolution","l":"findSolution()"},{"p":"com.logic.nd.algorithm.state","c":"StateSolution","l":"findSolution(IFormula, Map<IFormula, Integer>)","u":"findSolution(com.logic.api.IFormula,java.util.Map)"},{"p":"com.logic.parser","c":"ParserConstants","l":"FOL"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"FOLExp(IASTExp, Set<ASTFun>, Set<ASTPred>, Set<ASTVariable>, Set<ASTVariable>, Set<ASTArbitrary>)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp,java.util.Set,java.util.Set,java.util.Set,java.util.Set,java.util.Set)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"forbiddenRules"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"formulas"},{"p":"com.logic.parser","c":"ParserConstants","l":"FUNCTION"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"genBottomUp(IASTExp)","u":"genBottomUp(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.parser","c":"Parser","l":"generateParseException()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphFOL","l":"genTopDown(IASTExp)","u":"genTopDown(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"genTopDown(IASTExp)","u":"genTopDown(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"getBeginColumn()"},{"p":"com.logic.parser","c":"JavaCharStream","l":"getBeginLine()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraphSettings","l":"getBuildStrategy()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"IBuildStrategy","l":"getClosedNodes()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"LinearBuildStrategy","l":"getClosedNodes()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"ParallelBuildStrategy","l":"getClosedNodes()"},{"p":"com.logic.parser","c":"JavaCharStream","l":"getColumn()"},{"p":"com.logic.api","c":"INDProof","l":"getConclusion()"},{"p":"com.logic.nd.asts.binary","c":"AASTBinaryND","l":"getConclusion()"},{"p":"com.logic.nd.asts","c":"IASTND","l":"getConclusion()"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"getConclusion()"},{"p":"com.logic.nd.asts.others","c":"ASTHypothesis","l":"getConclusion()"},{"p":"com.logic.nd.asts.unary","c":"AASTUnaryND","l":"getConclusion()"},{"p":"com.logic.nd","c":"NDProof","l":"getConclusion()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraph","l":"getEdge(StateNode)","u":"getEdge(com.logic.nd.algorithm.state.StateNode)"},{"p":"com.logic.nd.algorithm.state.strategies","c":"IStateGraph","l":"getEdge(StateNode)","u":"getEdge(com.logic.nd.algorithm.state.StateNode)"},{"p":"com.logic.nd.algorithm.transition","c":"ITransitionGraph","l":"getEdges(IASTExp)","u":"getEdges(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"getEdges(IASTExp)","u":"getEdges(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"getEndColumn()"},{"p":"com.logic.parser","c":"JavaCharStream","l":"getEndLine()"},{"p":"com.logic.exps.asts.unary","c":"AASTUnaryExp","l":"getExp()"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"getExp()"},{"p":"com.logic.api","c":"IFormula","l":"getFormula()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"getFormula()"},{"p":"com.logic.exps.asts","c":"PLExp","l":"getFormula()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphFOL","l":"getFormula(IASTExp)","u":"getFormula(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"getFormula(IASTExp)","u":"getFormula(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionNode","l":"getFree()"},{"p":"com.logic.nd.asts.binary","c":"ASTEExist","l":"getGeneratedHypothesis()"},{"p":"com.logic.nd.asts.unary","c":"ASTAbsurdity","l":"getGeneratedHypothesis()"},{"p":"com.logic.nd.asts.unary","c":"ASTIImp","l":"getGeneratedHypothesis()"},{"p":"com.logic.nd.asts.unary","c":"ASTINeg","l":"getGeneratedHypothesis()"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"getGeneratedHypothesisM()"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"getGeneratedHypothesisN()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"IBuildStrategy","l":"getGraph()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"LinearBuildStrategy","l":"getGraph()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"ParallelBuildStrategy","l":"getGraph()"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"getHeight()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraphSettings","l":"getHeightLimit()"},{"p":"com.logic.nd.asts.unary","c":"AASTUnaryND","l":"getHyp()"},{"p":"com.logic.nd.asts.binary","c":"AASTBinaryND","l":"getHyp1()"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"getHyp1()"},{"p":"com.logic.nd.asts.binary","c":"AASTBinaryND","l":"getHyp2()"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"getHyp2()"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"getHyp3()"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"getHypotheses()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraphSettings","l":"getHypothesesPerStateLimit()"},{"p":"com.logic.exps.asts.others","c":"ASTArbitrary","l":"getId()"},{"p":"com.logic.exps.asts","c":"AASTExp","l":"getID()"},{"p":"com.logic.parser","c":"JavaCharStream","l":"GetImage()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraph","l":"getInitialState()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"IStateGraph","l":"getInitialState()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"IBuildStrategy","l":"getInvertedGraph()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"LinearBuildStrategy","l":"getInvertedGraph()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"ParallelBuildStrategy","l":"getInvertedGraph()"},{"p":"com.logic.exps.asts.binary","c":"AASTBinaryExp","l":"getLeft()"},{"p":"com.logic.parser","c":"JavaCharStream","l":"getLine()"},{"p":"com.logic.nd.asts.binary","c":"ASTEExist","l":"getM()"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"getM()"},{"p":"com.logic.nd.asts.others","c":"ASTHypothesis","l":"getM()"},{"p":"com.logic.nd.asts.unary","c":"ASTAbsurdity","l":"getM()"},{"p":"com.logic.nd.asts.unary","c":"ASTIImp","l":"getM()"},{"p":"com.logic.nd.asts.unary","c":"ASTINeg","l":"getM()"},{"p":"com.logic.nd.asts.binary","c":"ASTEExist","l":"getMapping()"},{"p":"com.logic.nd.asts.unary","c":"ASTEUni","l":"getMapping()"},{"p":"com.logic.nd.asts.unary","c":"ASTIExist","l":"getMapping()"},{"p":"com.logic.nd.asts.unary","c":"ASTIUni","l":"getMapping()"},{"p":"com.logic.parser","c":"ParseException","l":"getMessage()"},{"p":"com.logic.parser","c":"TokenMgrError","l":"getMessage()"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"getN()"},{"p":"com.logic.exps.asts.others","c":"AASTTerm","l":"getName()"},{"p":"com.logic.exps.asts.others","c":"ASTPred","l":"getName()"},{"p":"com.logic.parser","c":"Parser","l":"getNextToken()"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"getNextToken()"},{"p":"com.logic.nd.algorithm.state","c":"StateTransitionEdge","l":"getNode()"},{"p":"com.logic.api","c":"INDProof","l":"getPremises()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraph","l":"getPremises()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"IStateGraph","l":"getPremises()"},{"p":"com.logic.nd","c":"NDProof","l":"getPremises()"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"getPremisses()"},{"p":"com.logic.nd.algorithm.state","c":"StateTransitionEdge","l":"getProduces()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionNode","l":"getProduces()"},{"p":"com.logic.exps.asts.binary","c":"AASTBinaryExp","l":"getRight()"},{"p":"com.logic.nd.algorithm.state","c":"StateEdge","l":"getRule()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionEdge","l":"getRule()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraphSettings","l":"getState()"},{"p":"com.logic.parser","c":"JavaCharStream","l":"GetSuffix(int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"getTabSize(int)"},{"p":"com.logic.exps.asts.others","c":"ASTFun","l":"getTerms()"},{"p":"com.logic.exps.asts.others","c":"ASTPred","l":"getTerms()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraphSettings","l":"getTimeout()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionNode","l":"getTo()"},{"p":"com.logic.exps.asts","c":"AASTExp","l":"getToken(int)"},{"p":"com.logic.nd.asts","c":"AASTND","l":"getToken(int)"},{"p":"com.logic.parser","c":"Parser","l":"getToken(int)"},{"p":"com.logic.others","c":"Utils","l":"getToken(String)","u":"getToken(java.lang.String)"},{"p":"com.logic.nd.algorithm.state","c":"StateGraphSettings","l":"getTotalClosedNodesLimit()"},{"p":"com.logic.nd.algorithm.state","c":"StateEdge","l":"getTransitions()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionEdge","l":"getTransitions()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraphSettings","l":"getTrimStrategy()"},{"p":"com.logic.api","c":"IPLFormula","l":"getTruthTable()"},{"p":"com.logic.exps.asts","c":"PLExp","l":"getTruthTable()"},{"p":"com.logic.parser","c":"Token","l":"getValue()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"ParallelBuildStrategy","l":"graph"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"graph"},{"p":"com.logic.parser","c":"ParserConstants","l":"GREEK"},{"p":"com.logic.api","c":"IFormula","l":"hasGenerics()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"hasGenerics()"},{"p":"com.logic.exps.asts","c":"PLExp","l":"hasGenerics()"},{"p":"com.logic.exps.asts","c":"AASTExp","l":"hashCode()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"hashCode()"},{"p":"com.logic.exps.asts","c":"PLExp","l":"hashCode()"},{"p":"com.logic.nd.algorithm.state","c":"StateEdge","l":"hashCode()"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"hashCode()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionEdge","l":"hashCode()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionNode","l":"hashCode()"},{"p":"com.logic.nd.asts","c":"AASTND","l":"hashCode()"},{"p":"com.logic.api","c":"INDProof","l":"height()"},{"p":"com.logic.nd.algorithm.state","c":"StateEdge","l":"height()"},{"p":"com.logic.nd","c":"NDProof","l":"height()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"HeightTrimStrategy","l":"HeightTrimStrategy()","u":"%3Cinit%3E()"},{"p":"com.logic.nd.asts.unary","c":"AASTUnaryND","l":"hyp"},{"p":"com.logic.nd.asts.binary","c":"AASTBinaryND","l":"hyp1"},{"p":"com.logic.nd.asts.binary","c":"AASTBinaryND","l":"hyp2"},{"p":"com.logic.parser","c":"ParserConstants","l":"HYPOTHESIS"},{"p":"com.logic.parser","c":"ParserConstants","l":"IAND"},{"p":"com.logic.parser","c":"ParserConstants","l":"ICOND"},{"p":"com.logic.parser","c":"ParserConstants","l":"IEXIST"},{"p":"com.logic.parser","c":"ParserConstants","l":"ILOR"},{"p":"com.logic.parser","c":"Token","l":"image"},{"p":"com.logic.parser","c":"JavaCharStream","l":"inBuf"},{"p":"com.logic.parser","c":"ParserConstants","l":"INEG"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"input_stream"},{"p":"com.logic.parser","c":"JavaCharStream","l":"inputStream"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"interpret(IASTExp, Map<ASTLiteral, Boolean>)","u":"interpret(com.logic.exps.asts.IASTExp,java.util.Map)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"interpret(IASTND, Map<IASTExp, IFormula>, Map<IASTExp, Integer>)","u":"interpret(com.logic.nd.asts.IASTND,java.util.Map,java.util.Map)"},{"p":"com.logic.api","c":"IPLFormula","l":"interpret(Map<ASTLiteral, Boolean>)","u":"interpret(java.util.Map)"},{"p":"com.logic.exps.asts","c":"PLExp","l":"interpret(Map<ASTLiteral, Boolean>)","u":"interpret(java.util.Map)"},{"p":"com.logic.nd","c":"ERule","l":"INTRO_CONJUNCTION"},{"p":"com.logic.nd","c":"ERule","l":"INTRO_DISJUNCTION_LEFT"},{"p":"com.logic.nd","c":"ERule","l":"INTRO_DISJUNCTION_RIGHT"},{"p":"com.logic.nd","c":"ERule","l":"INTRO_EXISTENTIAL"},{"p":"com.logic.nd","c":"ERule","l":"INTRO_IMPLICATION"},{"p":"com.logic.nd","c":"ERule","l":"INTRO_NEGATION"},{"p":"com.logic.nd","c":"ERule","l":"INTRO_UNIVERSAL"},{"p":"com.logic.exps","c":"ExpUtils","l":"invert(IASTExp)","u":"invert(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.algorithm.state.strategies","c":"ParallelBuildStrategy","l":"inverted"},{"p":"com.logic.parser","c":"ParserConstants","l":"IROR"},{"p":"com.logic.api","c":"IFOLFormula","l":"isABoundedVariable(ASTVariable)","u":"isABoundedVariable(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"isABoundedVariable(ASTVariable)","u":"isABoundedVariable(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.api","c":"IFOLFormula","l":"isAFreeVariable(ASTVariable)","u":"isAFreeVariable(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"isAFreeVariable(ASTVariable)","u":"isAFreeVariable(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.api","c":"IFOLFormula","l":"isAnUnboundedVariable(ASTVariable)","u":"isAnUnboundedVariable(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"isAnUnboundedVariable(ASTVariable)","u":"isAnUnboundedVariable(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.api","c":"IFOLFormula","l":"isASentence()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"isASentence()"},{"p":"com.logic.api","c":"IFOLFormula","l":"isAVariable(ASTVariable)","u":"isAVariable(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"isAVariable(ASTVariable)","u":"isAVariable(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.nd.algorithm.state","c":"StateEdge","l":"isClosed()"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"isClosed()"},{"p":"com.logic.api","c":"IPLFormula","l":"isEquivalentTo(IPLFormula)","u":"isEquivalentTo(com.logic.api.IPLFormula)"},{"p":"com.logic.exps.asts","c":"PLExp","l":"isEquivalentTo(IPLFormula)","u":"isEquivalentTo(com.logic.api.IPLFormula)"},{"p":"com.logic.nd.algorithm.state","c":"StateGraph","l":"isSolvable()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"IStateGraph","l":"isSolvable()"},{"p":"com.logic.api","c":"IFOLFormula","l":"iterateBoundedVariables()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"iterateBoundedVariables()"},{"p":"com.logic.api","c":"IFOLFormula","l":"iterateFunctions()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"iterateFunctions()"},{"p":"com.logic.api","c":"IFormula","l":"iterateGenerics()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"iterateGenerics()"},{"p":"com.logic.exps.asts","c":"PLExp","l":"iterateGenerics()"},{"p":"com.logic.api","c":"IPLFormula","l":"iterateLiterals()"},{"p":"com.logic.exps.asts","c":"PLExp","l":"iterateLiterals()"},{"p":"com.logic.api","c":"IFOLFormula","l":"iteratePredicates()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"iteratePredicates()"},{"p":"com.logic.api","c":"IFOLFormula","l":"iterateTerms()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"iterateTerms()"},{"p":"com.logic.api","c":"IFOLFormula","l":"iterateUnboundedVariables()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"iterateUnboundedVariables()"},{"p":"com.logic.api","c":"IFOLFormula","l":"iterateVariables()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"iterateVariables()"},{"p":"com.logic.parser","c":"ParserConstants","l":"IUNI"},{"p":"com.logic.parser","c":"JavaCharStream","l":"JavaCharStream(InputStream)","u":"%3Cinit%3E(java.io.InputStream)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"JavaCharStream(InputStream, int, int)","u":"%3Cinit%3E(java.io.InputStream,int,int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"JavaCharStream(InputStream, int, int, int)","u":"%3Cinit%3E(java.io.InputStream,int,int,int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"JavaCharStream(InputStream, String)","u":"%3Cinit%3E(java.io.InputStream,java.lang.String)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"JavaCharStream(InputStream, String, int, int)","u":"%3Cinit%3E(java.io.InputStream,java.lang.String,int,int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"JavaCharStream(InputStream, String, int, int, int)","u":"%3Cinit%3E(java.io.InputStream,java.lang.String,int,int,int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"JavaCharStream(Reader)","u":"%3Cinit%3E(java.io.Reader)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"JavaCharStream(Reader, int, int)","u":"%3Cinit%3E(java.io.Reader,int,int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"JavaCharStream(Reader, int, int, int)","u":"%3Cinit%3E(java.io.Reader,int,int,int)"},{"p":"com.logic.parser","c":"Parser","l":"jj_nt"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"jjFillToken()"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"jjnewLexState"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"jjstrLiteralImages"},{"p":"com.logic.parser","c":"Token","l":"kind"},{"p":"com.logic.parser","c":"ParserConstants","l":"LBRA"},{"p":"com.logic.exps.asts.binary","c":"AASTBinaryExp","l":"left"},{"p":"com.logic.parser","c":"TokenMgrError","l":"LexicalError(boolean, int, int, int, String, char)","u":"LexicalError(boolean,int,int,int,java.lang.String,char)"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"lexStateNames"},{"p":"com.logic.parser","c":"JavaCharStream","l":"line"},{"p":"com.logic.nd.algorithm.state.strategies","c":"LinearBuildStrategy","l":"LinearBuildStrategy()","u":"%3Cinit%3E()"},{"p":"com.logic.parser","c":"ParserConstants","l":"LITERAL"},{"p":"com.logic.parser","c":"ParserConstants","l":"LPAR"},{"p":"com.logic.parser","c":"ParserConstants","l":"LRPAR"},{"p":"com.logic","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"com.logic","c":"Main","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.logic.others","c":"Env","l":"map()"},{"p":"com.logic.parser","c":"JavaCharStream","l":"maxNextCharInd"},{"p":"com.logic.parser","c":"ParserConstants","l":"MULTI_LINE_COMMENT"},{"p":"com.logic.exps.asts.others","c":"AASTTerm","l":"name"},{"p":"com.logic.parser","c":"ParserConstants","l":"ND"},{"p":"com.logic.nd","c":"NDProof","l":"NDProof(IFormula, Map<IFormula, Integer>, IASTND, int, int)","u":"%3Cinit%3E(com.logic.api.IFormula,java.util.Map,com.logic.nd.asts.IASTND,int,int)"},{"p":"com.logic.exps","c":"ExpUtils","l":"negate(IASTExp)","u":"negate(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.parser","c":"Token","l":"newToken(int)"},{"p":"com.logic.parser","c":"Token","l":"newToken(int, String)","u":"newToken(int,java.lang.String)"},{"p":"com.logic.parser","c":"Token","l":"next"},{"p":"com.logic.parser","c":"JavaCharStream","l":"nextCharBuf"},{"p":"com.logic.parser","c":"JavaCharStream","l":"nextCharInd"},{"p":"com.logic.parser","c":"ParserConstants","l":"NOT"},{"p":"com.logic.parser","c":"ParserConstants","l":"NUMBER"},{"p":"com.logic.parser","c":"ParserConstants","l":"OR"},{"p":"com.logic.nd.algorithm.state.strategies","c":"ParallelBuildStrategy","l":"ParallelBuildStrategy()","u":"%3Cinit%3E()"},{"p":"com.logic.parser","c":"ParseException","l":"ParseException()","u":"%3Cinit%3E()"},{"p":"com.logic.parser","c":"ParseException","l":"ParseException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.logic.parser","c":"ParseException","l":"ParseException(Token, int[][], String[])","u":"%3Cinit%3E(com.logic.parser.Token,int[][],java.lang.String[])"},{"p":"com.logic.parser","c":"Parser","l":"parseFOL()"},{"p":"com.logic.api","c":"LogicAPI","l":"parseFOL(String)","u":"parseFOL(java.lang.String)"},{"p":"com.logic.parser","c":"Parser","l":"parseNDFOL()"},{"p":"com.logic.api","c":"LogicAPI","l":"parseNDFOLProof(String)","u":"parseNDFOLProof(java.lang.String)"},{"p":"com.logic.parser","c":"Parser","l":"parseNDPL()"},{"p":"com.logic.api","c":"LogicAPI","l":"parseNDPLProof(String)","u":"parseNDPLProof(java.lang.String)"},{"p":"com.logic.parser","c":"Parser","l":"parsePL()"},{"p":"com.logic.api","c":"LogicAPI","l":"parsePL(String)","u":"parsePL(java.lang.String)"},{"p":"com.logic","c":"Main","l":"parsePL(String)","u":"parsePL(java.lang.String)"},{"p":"com.logic.parser","c":"Parser","l":"Parser(InputStream)","u":"%3Cinit%3E(java.io.InputStream)"},{"p":"com.logic.parser","c":"Parser","l":"Parser(InputStream, String)","u":"%3Cinit%3E(java.io.InputStream,java.lang.String)"},{"p":"com.logic.parser","c":"Parser","l":"Parser(ParserTokenManager)","u":"%3Cinit%3E(com.logic.parser.ParserTokenManager)"},{"p":"com.logic.parser","c":"Parser","l":"Parser(Reader)","u":"%3Cinit%3E(java.io.Reader)"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"ParserTokenManager(JavaCharStream)","u":"%3Cinit%3E(com.logic.parser.JavaCharStream)"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"ParserTokenManager(JavaCharStream, int)","u":"%3Cinit%3E(com.logic.parser.JavaCharStream,int)"},{"p":"com.logic.parser","c":"ParserConstants","l":"PL"},{"p":"com.logic.exps.asts","c":"PLExp","l":"PLExp(IASTExp, Set<ASTLiteral>, Set<ASTArbitrary>)","u":"%3Cinit%3E(com.logic.exps.asts.IASTExp,java.util.Set,java.util.Set)"},{"p":"com.logic.exps.asts.others","c":"ASTPred","l":"predicate"},{"p":"com.logic.parser","c":"ParserConstants","l":"PREDICATE"},{"p":"com.logic.parser","c":"ParserConstants","l":"PREMISSE"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"premisses"},{"p":"com.logic.parser","c":"JavaCharStream","l":"prevCharIsCR"},{"p":"com.logic.parser","c":"JavaCharStream","l":"prevCharIsLF"},{"p":"com.logic.others","c":"Utils","l":"printTruthTable(Map<Map<String, Boolean>, Boolean>)","u":"printTruthTable(java.util.Map)"},{"p":"com.logic.parser","c":"ParserConstants","l":"PROVE"},{"p":"com.logic.parser","c":"ParserConstants","l":"RBRA"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ReadByte()"},{"p":"com.logic.parser","c":"JavaCharStream","l":"readChar()"},{"p":"com.logic","c":"Main","l":"readFile(String)","u":"readFile(java.lang.String)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ReInit(InputStream)","u":"ReInit(java.io.InputStream)"},{"p":"com.logic.parser","c":"Parser","l":"ReInit(InputStream)","u":"ReInit(java.io.InputStream)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ReInit(InputStream, int, int)","u":"ReInit(java.io.InputStream,int,int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ReInit(InputStream, int, int, int)","u":"ReInit(java.io.InputStream,int,int,int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ReInit(InputStream, String)","u":"ReInit(java.io.InputStream,java.lang.String)"},{"p":"com.logic.parser","c":"Parser","l":"ReInit(InputStream, String)","u":"ReInit(java.io.InputStream,java.lang.String)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ReInit(InputStream, String, int, int)","u":"ReInit(java.io.InputStream,java.lang.String,int,int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ReInit(InputStream, String, int, int, int)","u":"ReInit(java.io.InputStream,java.lang.String,int,int,int)"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"ReInit(JavaCharStream)","u":"ReInit(com.logic.parser.JavaCharStream)"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"ReInit(JavaCharStream, int)","u":"ReInit(com.logic.parser.JavaCharStream,int)"},{"p":"com.logic.parser","c":"Parser","l":"ReInit(ParserTokenManager)","u":"ReInit(com.logic.parser.ParserTokenManager)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ReInit(Reader)","u":"ReInit(java.io.Reader)"},{"p":"com.logic.parser","c":"Parser","l":"ReInit(Reader)","u":"ReInit(java.io.Reader)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ReInit(Reader, int, int)","u":"ReInit(java.io.Reader,int,int)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"ReInit(Reader, int, int, int)","u":"ReInit(java.io.Reader,int,int,int)"},{"p":"com.logic.exps","c":"ExpUtils","l":"removeParenthesis(IASTExp)","u":"removeParenthesis(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"replace(IASTExp, IASTExp, IASTExp)","u":"replace(com.logic.exps.asts.IASTExp,com.logic.exps.asts.IASTExp,com.logic.exps.asts.IASTExp)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"replace(IASTExp, Map<IASTExp, IASTExp>)","u":"replace(com.logic.exps.asts.IASTExp,java.util.Map)"},{"p":"com.logic.parser","c":"ParserConstants","l":"RESET"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"resetClose()"},{"p":"com.logic.exps.asts.binary","c":"AASTBinaryExp","l":"right"},{"p":"com.logic.parser","c":"ParserConstants","l":"RPAR"},{"p":"com.logic.parser","c":"ParserConstants","l":"RRPAR"},{"p":"com.logic.nd.algorithm","c":"AlgoProofFOLBuilder","l":"setAlgoSettingsBuilder(AlgoSettingsBuilder)","u":"setAlgoSettingsBuilder(com.logic.nd.algorithm.AlgoSettingsBuilder)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofPLBuilder","l":"setAlgoSettingsBuilder(AlgoSettingsBuilder)","u":"setAlgoSettingsBuilder(com.logic.nd.algorithm.AlgoSettingsBuilder)"},{"p":"com.logic.nd.algorithm","c":"AlgoSettingsBuilder","l":"setBuildStrategy(IBuildStrategy)","u":"setBuildStrategy(com.logic.nd.algorithm.state.strategies.IBuildStrategy)"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"setClosed()"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"setDebugStream(PrintStream)","u":"setDebugStream(java.io.PrintStream)"},{"p":"com.logic.nd.asts.binary","c":"ASTEExist","l":"setGeneratedHypothesis(IASTExp)","u":"setGeneratedHypothesis(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"ASTAbsurdity","l":"setGeneratedHypothesis(IASTExp)","u":"setGeneratedHypothesis(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"ASTIImp","l":"setGeneratedHypothesis(IASTExp)","u":"setGeneratedHypothesis(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.unary","c":"ASTINeg","l":"setGeneratedHypothesis(IASTExp)","u":"setGeneratedHypothesis(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"setGeneratedHypothesisM(IASTExp)","u":"setGeneratedHypothesisM(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"setGeneratedHypothesisN(IASTExp)","u":"setGeneratedHypothesisN(com.logic.exps.asts.IASTExp)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofStateBuilder","l":"setHeight(int)"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"setHeight(int)"},{"p":"com.logic.nd.algorithm","c":"AlgoSettingsBuilder","l":"setHeightLimit(int)"},{"p":"com.logic.nd.algorithm","c":"AlgoSettingsBuilder","l":"setHypothesesPerStateLimit(int)"},{"p":"com.logic.nd.algorithm","c":"AlgoSettingsBuilder","l":"setInitialState(AlgoProofStateBuilder)","u":"setInitialState(com.logic.nd.algorithm.AlgoProofStateBuilder)"},{"p":"com.logic.nd.asts.unary","c":"ASTEUni","l":"setMapping(AASTTerm)","u":"setMapping(com.logic.exps.asts.others.AASTTerm)"},{"p":"com.logic.nd.asts.unary","c":"ASTIExist","l":"setMapping(AASTTerm)","u":"setMapping(com.logic.exps.asts.others.AASTTerm)"},{"p":"com.logic.nd.asts.binary","c":"ASTEExist","l":"setMapping(ASTVariable)","u":"setMapping(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.nd.asts.unary","c":"ASTIUni","l":"setMapping(ASTVariable)","u":"setMapping(com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.nd.algorithm","c":"AlgoProofStateBuilder","l":"setNoFreeVariables(Set<ASTVariable>)","u":"setNoFreeVariables(java.util.Set)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"setTabSize(int)"},{"p":"com.logic.nd.algorithm","c":"AlgoSettingsBuilder","l":"setTimeout(long)"},{"p":"com.logic.nd.algorithm.state","c":"StateGraph","l":"settings"},{"p":"com.logic.nd.algorithm","c":"AlgoSettingsBuilder","l":"setTotalClosedNodesLimit(int)"},{"p":"com.logic.nd.algorithm","c":"AlgoSettingsBuilder","l":"setTrimStrategy(ITrimStrategy)","u":"setTrimStrategy(com.logic.nd.algorithm.state.strategies.ITrimStrategy)"},{"p":"com.logic.parser","c":"ParserConstants","l":"SINGLE_LINE_COMMENT"},{"p":"com.logic.api","c":"INDProof","l":"size()"},{"p":"com.logic.nd","c":"NDProof","l":"size()"},{"p":"com.logic.nd.algorithm.state.strategies","c":"SizeTrimStrategy","l":"SizeTrimStrategy()","u":"%3Cinit%3E()"},{"p":"com.logic.parser","c":"ParserConstants","l":"SPACE"},{"p":"com.logic.parser","c":"ParseException","l":"specialConstructor"},{"p":"com.logic.parser","c":"Token","l":"specialToken"},{"p":"com.logic.nd.algorithm.state","c":"StateEdge","l":"StateEdge(ERule)","u":"%3Cinit%3E(com.logic.nd.ERule)"},{"p":"com.logic.nd.algorithm.state","c":"StateEdge","l":"StateEdge(ERule, StateNode, IFormula)","u":"%3Cinit%3E(com.logic.nd.ERule,com.logic.nd.algorithm.state.StateNode,com.logic.api.IFormula)"},{"p":"com.logic.nd.algorithm.state","c":"StateGraph","l":"StateGraph(ITransitionGraph, StateGraphSettings)","u":"%3Cinit%3E(com.logic.nd.algorithm.transition.ITransitionGraph,com.logic.nd.algorithm.state.StateGraphSettings)"},{"p":"com.logic.nd.algorithm.state","c":"StateGraphSettings","l":"StateGraphSettings(StateNode, int, int, int, long, IBuildStrategy, ITrimStrategy)","u":"%3Cinit%3E(com.logic.nd.algorithm.state.StateNode,int,int,int,long,com.logic.nd.algorithm.state.strategies.IBuildStrategy,com.logic.nd.algorithm.state.strategies.ITrimStrategy)"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"StateNode(IFormula, Set<IFormula>, Set<IFormula>, int)","u":"%3Cinit%3E(com.logic.api.IFormula,java.util.Set,java.util.Set,int)"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"StateNode(IFormula, Set<IFormula>, Set<IFormula>, int, Set<IFormula>)","u":"%3Cinit%3E(com.logic.api.IFormula,java.util.Set,java.util.Set,int,java.util.Set)"},{"p":"com.logic.nd.algorithm.state","c":"StateSolution","l":"StateSolution(IStateGraph, boolean)","u":"%3Cinit%3E(com.logic.nd.algorithm.state.strategies.IStateGraph,boolean)"},{"p":"com.logic.nd.algorithm.state","c":"StateTransitionEdge","l":"StateTransitionEdge(StateNode, IFormula)","u":"%3Cinit%3E(com.logic.nd.algorithm.state.StateNode,com.logic.api.IFormula)"},{"p":"com.logic.parser","c":"JavaCharStream","l":"staticFlag"},{"p":"com.logic.parser","c":"ParserTokenManager","l":"SwitchTo(int)"},{"p":"com.logic.parser","c":"ParserConstants","l":"TAB"},{"p":"com.logic.parser","c":"JavaCharStream","l":"tabSize"},{"p":"com.logic.parser","c":"Parser","l":"token"},{"p":"com.logic.parser","c":"Parser","l":"token_source"},{"p":"com.logic.parser","c":"Token","l":"Token()","u":"%3Cinit%3E()"},{"p":"com.logic.parser","c":"Token","l":"Token(int)","u":"%3Cinit%3E(int)"},{"p":"com.logic.parser","c":"Token","l":"Token(int, String)","u":"%3Cinit%3E(int,java.lang.String)"},{"p":"com.logic.parser","c":"ParseException","l":"tokenImage"},{"p":"com.logic.parser","c":"ParserConstants","l":"tokenImage"},{"p":"com.logic.parser","c":"TokenMgrError","l":"TokenMgrError()","u":"%3Cinit%3E()"},{"p":"com.logic.parser","c":"TokenMgrError","l":"TokenMgrError(boolean, int, int, int, String, char, int)","u":"%3Cinit%3E(boolean,int,int,int,java.lang.String,char,int)"},{"p":"com.logic.parser","c":"TokenMgrError","l":"TokenMgrError(String, int)","u":"%3Cinit%3E(java.lang.String,int)"},{"p":"com.logic.parser","c":"ParserConstants","l":"TOP"},{"p":"com.logic.exps.asts","c":"AASTExp","l":"toString()"},{"p":"com.logic.exps.asts.binary","c":"ASTAnd","l":"toString()"},{"p":"com.logic.exps.asts.binary","c":"ASTBiconditional","l":"toString()"},{"p":"com.logic.exps.asts.binary","c":"ASTConditional","l":"toString()"},{"p":"com.logic.exps.asts.binary","c":"ASTExistential","l":"toString()"},{"p":"com.logic.exps.asts.binary","c":"ASTOr","l":"toString()"},{"p":"com.logic.exps.asts.binary","c":"ASTUniversal","l":"toString()"},{"p":"com.logic.exps.asts","c":"FOLExp","l":"toString()"},{"p":"com.logic.exps.asts.others","c":"AASTTerm","l":"toString()"},{"p":"com.logic.exps.asts.others","c":"ASTArbitrary","l":"toString()"},{"p":"com.logic.exps.asts.others","c":"ASTBottom","l":"toString()"},{"p":"com.logic.exps.asts.others","c":"ASTFun","l":"toString()"},{"p":"com.logic.exps.asts.others","c":"ASTLiteral","l":"toString()"},{"p":"com.logic.exps.asts.others","c":"ASTPred","l":"toString()"},{"p":"com.logic.exps.asts.others","c":"ASTTop","l":"toString()"},{"p":"com.logic.exps.asts","c":"PLExp","l":"toString()"},{"p":"com.logic.exps.asts.unary","c":"ASTNot","l":"toString()"},{"p":"com.logic.exps.asts.unary","c":"ASTParenthesis","l":"toString()"},{"p":"com.logic.nd.algorithm.state","c":"StateEdge","l":"toString()"},{"p":"com.logic.nd.algorithm.state","c":"StateGraph","l":"toString()"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"toString()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionEdge","l":"toString()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphFOL","l":"toString()"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"toString()"},{"p":"com.logic.nd.asts.binary","c":"AASTBinaryND","l":"toString()"},{"p":"com.logic.nd.asts.binary","c":"ASTEExist","l":"toString()"},{"p":"com.logic.nd.asts.binary","c":"ASTEImp","l":"toString()"},{"p":"com.logic.nd.asts.binary","c":"ASTENeg","l":"toString()"},{"p":"com.logic.nd.asts.binary","c":"ASTIConj","l":"toString()"},{"p":"com.logic.nd.asts.others","c":"ASTEDisj","l":"toString()"},{"p":"com.logic.nd.asts.others","c":"ASTHypothesis","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"AASTUnaryND","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"ASTAbsurdity","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"ASTELConj","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"ASTERConj","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"ASTEUni","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"ASTIExist","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"ASTIImp","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"ASTILDis","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"ASTINeg","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"ASTIRDis","l":"toString()"},{"p":"com.logic.nd.asts.unary","c":"ASTIUni","l":"toString()"},{"p":"com.logic.nd","c":"ERule","l":"toString()"},{"p":"com.logic.nd","c":"NDProof","l":"toString()"},{"p":"com.logic.parser","c":"Token","l":"toString()"},{"p":"com.logic.nd.algorithm.state","c":"StateNode","l":"transit(IFormula, IFormula, ASTVariable)","u":"transit(com.logic.api.IFormula,com.logic.api.IFormula,com.logic.exps.asts.others.ASTVariable)"},{"p":"com.logic.nd.algorithm.state","c":"StateGraph","l":"transitionGraph"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphFOL","l":"TransitionGraphFOL(IFOLFormula, Set<IFormula>, Set<ERule>, Set<AASTTerm>)","u":"%3Cinit%3E(com.logic.api.IFOLFormula,java.util.Set,java.util.Set,java.util.Set)"},{"p":"com.logic.nd.algorithm.transition","c":"TransitionGraphPL","l":"TransitionGraphPL(IFormula, Set<IFormula>, Set<ERule>)","u":"%3Cinit%3E(com.logic.api.IFormula,java.util.Set,java.util.Set)"},{"p":"com.logic.nd.algorithm.state","c":"StateGraph","l":"tree"},{"p":"com.logic.nd.algorithm.state.strategies","c":"HeightTrimStrategy","l":"trim(IBuildStrategy)","u":"trim(com.logic.nd.algorithm.state.strategies.IBuildStrategy)"},{"p":"com.logic.nd.algorithm.state.strategies","c":"ITrimStrategy","l":"trim(IBuildStrategy)","u":"trim(com.logic.nd.algorithm.state.strategies.IBuildStrategy)"},{"p":"com.logic.nd.algorithm.state.strategies","c":"SizeTrimStrategy","l":"trim(IBuildStrategy)","u":"trim(com.logic.nd.algorithm.state.strategies.IBuildStrategy)"},{"p":"com.logic.parser","c":"ParserConstants","l":"UNIVERSAL"},{"p":"com.logic.parser","c":"JavaCharStream","l":"UpdateLineColumn(char)"},{"p":"com.logic.others","c":"Utils","l":"Utils()","u":"%3Cinit%3E()"},{"p":"com.logic.nd","c":"ERule","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.logic.nd","c":"ERule","l":"values()"},{"p":"com.logic.parser","c":"ParserConstants","l":"VARIABLE"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTAbsurdity, E)","u":"visit(com.logic.nd.asts.unary.ASTAbsurdity,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTAbsurdity, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTAbsurdity,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTAbsurdity, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTAbsurdity,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTAbsurdity, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTAbsurdity,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTAbsurdity, Void)","u":"visit(com.logic.nd.asts.unary.ASTAbsurdity,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTAbsurdity, Void)","u":"visit(com.logic.nd.asts.unary.ASTAbsurdity,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTAnd, E)","u":"visit(com.logic.exps.asts.binary.ASTAnd,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTAnd, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.binary.ASTAnd,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTAnd, Void)","u":"visit(com.logic.exps.asts.binary.ASTAnd,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTAnd, Void)","u":"visit(com.logic.exps.asts.binary.ASTAnd,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTAnd, Void)","u":"visit(com.logic.exps.asts.binary.ASTAnd,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTArbitrary, E)","u":"visit(com.logic.exps.asts.others.ASTArbitrary,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTArbitrary, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.others.ASTArbitrary,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTArbitrary, Void)","u":"visit(com.logic.exps.asts.others.ASTArbitrary,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTArbitrary, Void)","u":"visit(com.logic.exps.asts.others.ASTArbitrary,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTArbitrary, Void)","u":"visit(com.logic.exps.asts.others.ASTArbitrary,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTBiconditional, E)","u":"visit(com.logic.exps.asts.binary.ASTBiconditional,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTBiconditional, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.binary.ASTBiconditional,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTBiconditional, Void)","u":"visit(com.logic.exps.asts.binary.ASTBiconditional,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTBiconditional, Void)","u":"visit(com.logic.exps.asts.binary.ASTBiconditional,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTBiconditional, Void)","u":"visit(com.logic.exps.asts.binary.ASTBiconditional,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTBottom, E)","u":"visit(com.logic.exps.asts.others.ASTBottom,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTBottom, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.others.ASTBottom,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTBottom, Void)","u":"visit(com.logic.exps.asts.others.ASTBottom,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTBottom, Void)","u":"visit(com.logic.exps.asts.others.ASTBottom,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTBottom, Void)","u":"visit(com.logic.exps.asts.others.ASTBottom,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTConditional, E)","u":"visit(com.logic.exps.asts.binary.ASTConditional,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTConditional, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.binary.ASTConditional,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTConditional, Void)","u":"visit(com.logic.exps.asts.binary.ASTConditional,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTConditional, Void)","u":"visit(com.logic.exps.asts.binary.ASTConditional,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTConditional, Void)","u":"visit(com.logic.exps.asts.binary.ASTConditional,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTConstant, E)","u":"visit(com.logic.exps.asts.others.ASTConstant,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTConstant, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.others.ASTConstant,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTConstant, Void)","u":"visit(com.logic.exps.asts.others.ASTConstant,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTConstant, Void)","u":"visit(com.logic.exps.asts.others.ASTConstant,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTConstant, Void)","u":"visit(com.logic.exps.asts.others.ASTConstant,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTEDisj, E)","u":"visit(com.logic.nd.asts.others.ASTEDisj,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTEDisj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.others.ASTEDisj,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTEDisj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.others.ASTEDisj,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTEDisj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.others.ASTEDisj,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTEDisj, Void)","u":"visit(com.logic.nd.asts.others.ASTEDisj,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTEDisj, Void)","u":"visit(com.logic.nd.asts.others.ASTEDisj,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTEExist, E)","u":"visit(com.logic.nd.asts.binary.ASTEExist,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTEExist, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTEExist,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTEExist, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTEExist,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTEExist, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTEExist,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTEExist, Void)","u":"visit(com.logic.nd.asts.binary.ASTEExist,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTEExist, Void)","u":"visit(com.logic.nd.asts.binary.ASTEExist,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTEImp, E)","u":"visit(com.logic.nd.asts.binary.ASTEImp,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTEImp, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTEImp,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTEImp, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTEImp,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTEImp, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTEImp,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTEImp, Void)","u":"visit(com.logic.nd.asts.binary.ASTEImp,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTEImp, Void)","u":"visit(com.logic.nd.asts.binary.ASTEImp,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTELConj, E)","u":"visit(com.logic.nd.asts.unary.ASTELConj,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTELConj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTELConj,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTELConj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTELConj,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTELConj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTELConj,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTELConj, Void)","u":"visit(com.logic.nd.asts.unary.ASTELConj,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTELConj, Void)","u":"visit(com.logic.nd.asts.unary.ASTELConj,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTENeg, E)","u":"visit(com.logic.nd.asts.binary.ASTENeg,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTENeg, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTENeg,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTENeg, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTENeg,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTENeg, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTENeg,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTENeg, Void)","u":"visit(com.logic.nd.asts.binary.ASTENeg,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTENeg, Void)","u":"visit(com.logic.nd.asts.binary.ASTENeg,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTERConj, E)","u":"visit(com.logic.nd.asts.unary.ASTERConj,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTERConj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTERConj,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTERConj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTERConj,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTERConj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTERConj,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTERConj, Void)","u":"visit(com.logic.nd.asts.unary.ASTERConj,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTERConj, Void)","u":"visit(com.logic.nd.asts.unary.ASTERConj,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTEUni, E)","u":"visit(com.logic.nd.asts.unary.ASTEUni,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTEUni, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTEUni,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTEUni, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTEUni,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTEUni, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTEUni,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTEUni, Void)","u":"visit(com.logic.nd.asts.unary.ASTEUni,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTEUni, Void)","u":"visit(com.logic.nd.asts.unary.ASTEUni,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTExistential, E)","u":"visit(com.logic.exps.asts.binary.ASTExistential,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTExistential, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.binary.ASTExistential,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTExistential, Void)","u":"visit(com.logic.exps.asts.binary.ASTExistential,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTExistential, Void)","u":"visit(com.logic.exps.asts.binary.ASTExistential,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTExistential, Void)","u":"visit(com.logic.exps.asts.binary.ASTExistential,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTFun, E)","u":"visit(com.logic.exps.asts.others.ASTFun,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTFun, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.others.ASTFun,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTFun, Void)","u":"visit(com.logic.exps.asts.others.ASTFun,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTFun, Void)","u":"visit(com.logic.exps.asts.others.ASTFun,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTFun, Void)","u":"visit(com.logic.exps.asts.others.ASTFun,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTHypothesis, E)","u":"visit(com.logic.nd.asts.others.ASTHypothesis,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTHypothesis, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.others.ASTHypothesis,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTHypothesis, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.others.ASTHypothesis,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTHypothesis, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.others.ASTHypothesis,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTHypothesis, Void)","u":"visit(com.logic.nd.asts.others.ASTHypothesis,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTHypothesis, Void)","u":"visit(com.logic.nd.asts.others.ASTHypothesis,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTIConj, E)","u":"visit(com.logic.nd.asts.binary.ASTIConj,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTIConj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTIConj,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTIConj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTIConj,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTIConj, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.binary.ASTIConj,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTIConj, Void)","u":"visit(com.logic.nd.asts.binary.ASTIConj,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTIConj, Void)","u":"visit(com.logic.nd.asts.binary.ASTIConj,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTIExist, E)","u":"visit(com.logic.nd.asts.unary.ASTIExist,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTIExist, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIExist,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTIExist, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIExist,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTIExist, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIExist,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTIExist, Void)","u":"visit(com.logic.nd.asts.unary.ASTIExist,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTIExist, Void)","u":"visit(com.logic.nd.asts.unary.ASTIExist,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTIImp, E)","u":"visit(com.logic.nd.asts.unary.ASTIImp,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTIImp, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIImp,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTIImp, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIImp,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTIImp, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIImp,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTIImp, Void)","u":"visit(com.logic.nd.asts.unary.ASTIImp,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTIImp, Void)","u":"visit(com.logic.nd.asts.unary.ASTIImp,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTILDis, E)","u":"visit(com.logic.nd.asts.unary.ASTILDis,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTILDis, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTILDis,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTILDis, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTILDis,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTILDis, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTILDis,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTILDis, Void)","u":"visit(com.logic.nd.asts.unary.ASTILDis,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTILDis, Void)","u":"visit(com.logic.nd.asts.unary.ASTILDis,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTINeg, E)","u":"visit(com.logic.nd.asts.unary.ASTINeg,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTINeg, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTINeg,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTINeg, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTINeg,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTINeg, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTINeg,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTINeg, Void)","u":"visit(com.logic.nd.asts.unary.ASTINeg,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTINeg, Void)","u":"visit(com.logic.nd.asts.unary.ASTINeg,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTIRDis, E)","u":"visit(com.logic.nd.asts.unary.ASTIRDis,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTIRDis, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIRDis,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTIRDis, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIRDis,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTIRDis, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIRDis,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTIRDis, Void)","u":"visit(com.logic.nd.asts.unary.ASTIRDis,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTIRDis, Void)","u":"visit(com.logic.nd.asts.unary.ASTIRDis,java.lang.Void)"},{"p":"com.logic.nd.asts","c":"INDVisitor","l":"visit(ASTIUni, E)","u":"visit(com.logic.nd.asts.unary.ASTIUni,E)"},{"p":"com.logic.nd.checkers","c":"NDMarksChecker","l":"visit(ASTIUni, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIUni,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDSideCondChecker","l":"visit(ASTIUni, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIUni,com.logic.others.Env)"},{"p":"com.logic.nd.interpreters","c":"NDInterpreter","l":"visit(ASTIUni, Env<Integer, IASTExp>)","u":"visit(com.logic.nd.asts.unary.ASTIUni,com.logic.others.Env)"},{"p":"com.logic.nd.checkers","c":"NDWWFChecker","l":"visit(ASTIUni, Void)","u":"visit(com.logic.nd.asts.unary.ASTIUni,java.lang.Void)"},{"p":"com.logic.nd.checkers","c":"NDWWFExpsChecker","l":"visit(ASTIUni, Void)","u":"visit(com.logic.nd.asts.unary.ASTIUni,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTLiteral, E)","u":"visit(com.logic.exps.asts.others.ASTLiteral,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTLiteral, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.others.ASTLiteral,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTLiteral, Void)","u":"visit(com.logic.exps.asts.others.ASTLiteral,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTLiteral, Void)","u":"visit(com.logic.exps.asts.others.ASTLiteral,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTLiteral, Void)","u":"visit(com.logic.exps.asts.others.ASTLiteral,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTNot, E)","u":"visit(com.logic.exps.asts.unary.ASTNot,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTNot, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.unary.ASTNot,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTNot, Void)","u":"visit(com.logic.exps.asts.unary.ASTNot,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTNot, Void)","u":"visit(com.logic.exps.asts.unary.ASTNot,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTNot, Void)","u":"visit(com.logic.exps.asts.unary.ASTNot,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTOr, E)","u":"visit(com.logic.exps.asts.binary.ASTOr,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTOr, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.binary.ASTOr,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTOr, Void)","u":"visit(com.logic.exps.asts.binary.ASTOr,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTOr, Void)","u":"visit(com.logic.exps.asts.binary.ASTOr,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTOr, Void)","u":"visit(com.logic.exps.asts.binary.ASTOr,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTParenthesis, E)","u":"visit(com.logic.exps.asts.unary.ASTParenthesis,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTParenthesis, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.unary.ASTParenthesis,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTParenthesis, Void)","u":"visit(com.logic.exps.asts.unary.ASTParenthesis,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTParenthesis, Void)","u":"visit(com.logic.exps.asts.unary.ASTParenthesis,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTParenthesis, Void)","u":"visit(com.logic.exps.asts.unary.ASTParenthesis,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTPred, E)","u":"visit(com.logic.exps.asts.others.ASTPred,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTPred, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.others.ASTPred,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTPred, Void)","u":"visit(com.logic.exps.asts.others.ASTPred,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTPred, Void)","u":"visit(com.logic.exps.asts.others.ASTPred,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTPred, Void)","u":"visit(com.logic.exps.asts.others.ASTPred,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTTop, E)","u":"visit(com.logic.exps.asts.others.ASTTop,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTTop, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.others.ASTTop,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTTop, Void)","u":"visit(com.logic.exps.asts.others.ASTTop,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTTop, Void)","u":"visit(com.logic.exps.asts.others.ASTTop,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTTop, Void)","u":"visit(com.logic.exps.asts.others.ASTTop,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTUniversal, E)","u":"visit(com.logic.exps.asts.binary.ASTUniversal,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTUniversal, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.binary.ASTUniversal,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTUniversal, Void)","u":"visit(com.logic.exps.asts.binary.ASTUniversal,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTUniversal, Void)","u":"visit(com.logic.exps.asts.binary.ASTUniversal,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTUniversal, Void)","u":"visit(com.logic.exps.asts.binary.ASTUniversal,java.lang.Void)"},{"p":"com.logic.exps.asts","c":"IExpsVisitor","l":"visit(ASTVariable, E)","u":"visit(com.logic.exps.asts.others.ASTVariable,E)"},{"p":"com.logic.exps.checkers","c":"FOLWFFChecker","l":"visit(ASTVariable, Env<String, ASTVariable>)","u":"visit(com.logic.exps.asts.others.ASTVariable,com.logic.others.Env)"},{"p":"com.logic.exps.checkers","c":"PLWFFChecker","l":"visit(ASTVariable, Void)","u":"visit(com.logic.exps.asts.others.ASTVariable,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"FOLReplaceExps","l":"visit(ASTVariable, Void)","u":"visit(com.logic.exps.asts.others.ASTVariable,java.lang.Void)"},{"p":"com.logic.exps.interpreters","c":"PLInterpreter","l":"visit(ASTVariable, Void)","u":"visit(com.logic.exps.asts.others.ASTVariable,java.lang.Void)"}];updateSearchResults();